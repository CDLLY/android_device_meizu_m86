From fad0f264ab8cccd8247fa5404e4dfa5ed5f1c47b Mon Sep 17 00:00:00 2001
From: faust93 <monumentum@gmail.com>
Date: Thu, 14 Jul 2016 15:28:04 +0300
Subject: [PATCH] hifi switching logic

---
 .../com/android/server/audio/AudioService.java     | 24 ++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/services/core/java/com/android/server/audio/AudioService.java b/services/core/java/com/android/server/audio/AudioService.java
index a06d00a..277bfb0 100644
--- a/services/core/java/com/android/server/audio/AudioService.java
+++ b/services/core/java/com/android/server/audio/AudioService.java
@@ -709,6 +709,7 @@ public class AudioService extends IAudioService.Stub {
                 mContext, mVolumeController, this);
 
         readAndSetLowRamDevice();
+        MzReadAndSetHifiParam();
 
         // Call setRingerModeInt() to apply correct mute
         // state on streams affected by ringer mode.
@@ -830,6 +831,7 @@ public class AudioService extends IAudioService.Stub {
         AudioSystem.setParameters("restarting=true");
 
         readAndSetLowRamDevice();
+        MzReadAndSetHifiParam();
 
         // Restore device connection states
         synchronized (mConnectedDevices) {
@@ -5372,6 +5374,9 @@ public class AudioService extends IAudioService.Stub {
             if (!isUsb && device != AudioSystem.DEVICE_IN_WIRED_HEADSET) {
                 sendDeviceConnectionIntent(device, state, address, deviceName);
             }
+            if (device == 4 || device == 8) {
+                MzReadAndSetHifiParam();
+            }
         }
     }
 
@@ -6525,6 +6530,25 @@ public class AudioService extends IAudioService.Stub {
         }
     }
 
+    private void MzReadAndSetHifiParam() {
+        int hifiEnable = System.getIntForUser(mContentResolver, Settings.System.HIFI_ENABLE, 0, UserHandle.USER_CURRENT);
+        //SystemProperties.get("ro.meizu.hardware.hifi", "false");
+        Log.d(TAG,"MzReadAndSetHifiParam: hifiEnable = " + hifiEnable);
+        if (hifiEnable == 1) {
+            String gainKeyPairs = "hifi_gain=" + System.getIntForUser(mContentResolver, Settings.System.HIFI_MODE, 0, UserHandle.USER_CURRENT);
+          //  synchronized (this.mConnectedDevices) {
+          //    if ((this.mConnectedDevices.containsKey(Integer.valueOf(4)) || this.mConnectedDevices.containsKey(Integer.valueOf(8))) && true) {
+                    AudioSystem.setParameters("hifi_state=on");
+                    AudioSystem.setParameters(gainKeyPairs);
+                    Log.d(TAG, "MzReadAndSetHifiParam: hifi_state=on | " + gainKeyPairs);
+          //      } else {
+          //          AudioSystem.setParameters("hifi_state=off");
+          //          Log.d(TAG, "MzReadAndSetHifiParam: hifi_state=off");
+          //      }
+          //  }
+        }
+    }
+
     //======================
     // Audio policy callback from AudioSystem
     //======================
-- 
1.9.3 (Apple Git-50)

