From 7fdfb64ca20a733b2583d24ddf02cc0f4e97644c Mon Sep 17 00:00:00 2001
From: faust93 <monumentum@gmail.com>
Date: Fri, 29 Jul 2016 20:00:57 +0300
Subject: [PATCH] hifi settings [2/2]

---
 core/java/android/provider/Settings.java           |  11 ++
 packages/SystemUI/res/values/cm_strings.xml        |   2 +-
 packages/SystemUI/res/values/config.xml            |   2 +-
 packages/SystemUI/res/values/rr_strings.xml        |   4 +
 .../com/android/systemui/qs/tiles/HifiTile.java    | 115 +++++++++++++++++++++
 .../systemui/statusbar/phone/QSTileHost.java       |   2 +
 .../src/com/android/systemui/tuner/QsTuner.java    |   1 +
 .../android/server/power/PowerManagerService.java  |   2 +
 8 files changed, 137 insertions(+), 2 deletions(-)
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/tiles/HifiTile.java

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 1f1fde0..3a4f332 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -5784,6 +5784,17 @@ public final class Settings {
          */
         public static final String VOLUME_DIALOG_STROKE = "volume_dialog_stroke";
 
+         /**
+         * DAC Settings
+         * @hide
+         */
+        public static final String HIFI_ENABLE = "hifi_enable";
+         /**
+         * DAC Settings
+         * @hide
+         */
+        public static final String HIFI_MODE = "hifi_mode";
+
         /**
          * Volume dialog stroke custom color
          * Accent color is used as default
diff --git a/packages/SystemUI/res/values/cm_strings.xml b/packages/SystemUI/res/values/cm_strings.xml
index 7745a6b..71e1405 100644
--- a/packages/SystemUI/res/values/cm_strings.xml
+++ b/packages/SystemUI/res/values/cm_strings.xml
@@ -156,7 +156,7 @@
     <string name="quick_settings_volume_panel_label">Volume panel</string>
     <string name="quick_settings_usb_tether_label">USB tethering</string>
     <string name="quick_settings_screen_timeout_detail_title">Screen timeout</string>
-
+    <string name="quick_settings_hifi_label">HIFI settings</string>
 
     <string name="quick_settings_lockscreen_label">Lock screen</string>
     <string name="quick_settings_ambient_display_label">Ambient display</string>
diff --git a/packages/SystemUI/res/values/config.xml b/packages/SystemUI/res/values/config.xml
index 1d301e7..c1f7b0f 100644
--- a/packages/SystemUI/res/values/config.xml
+++ b/packages/SystemUI/res/values/config.xml
@@ -119,7 +119,7 @@
 
     <!-- The default tiles to display in QuickSettings -->
     <string name="quick_settings_tiles_default" translatable="false">
-        wifi,bt,inversion,cell,airplane,dnd,rotation,flashlight,location,cast,hotspot,adb_network,compass,nfc,float_mode,pie,profiles,sync,volume_panel,usb_tether,screen_timeout,performance,ambient_display,live_display,music,brightness,screen_off,screenshot,expanded_desktop,reboot,configurations,heads_up,lte,themes,navbar,appcirclebar,kernel_adiutor,screenrecord,gesture_anywhere,battery_saver,power_menu,app_picker,kill_app,caffeine,hw_keys,pulse,sound,visualizer,lockscreen
+        wifi,bt,inversion,cell,airplane,dnd,rotation,flashlight,location,cast,hotspot,adb_network,compass,nfc,float_mode,pie,profiles,sync,volume_panel,usb_tether,screen_timeout,performance,ambient_display,live_display,music,brightness,screen_off,screenshot,expanded_desktop,reboot,configurations,heads_up,lte,themes,navbar,appcirclebar,kernel_adiutor,screenrecord,gesture_anywhere,battery_saver,power_menu,app_picker,kill_app,caffeine,hw_keys,pulse,sound,visualizer,lockscreen,hifi
     </string>
 
     <!-- The default tiles to reset to in QuickSettings -->
diff --git a/packages/SystemUI/res/values/rr_strings.xml b/packages/SystemUI/res/values/rr_strings.xml
index 3c4e647..6277509 100644
--- a/packages/SystemUI/res/values/rr_strings.xml
+++ b/packages/SystemUI/res/values/rr_strings.xml
@@ -173,6 +173,10 @@
    <string name="quick_settings_gesture_anywhere_on">Gestures On</string>
    <string name="quick_settings_gesture_anywhere_off">Gestures Off</string>	
 
+    <!-- Hifi tile -->
+    <string name="quick_settings_hifi_on">HIFI On</string>
+    <string name="quick_settings_hifi_off">HIFI Off</string>
+
    <!-- Tuner UI -->
    <string name="status_bar_tuner_title">Status bar tuner</string>   
    <string name="status_bar_tuner">Status bar icons</string>   
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/HifiTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/HifiTile.java
new file mode 100644
index 0000000..0e83c96
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/HifiTile.java
@@ -0,0 +1,115 @@
+/*
+ * Copyright (C) 2015 The CyanogenMod Project
+ * Copyright (C) 2016 faust93 at monumentum@gmail.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.qs.tiles;
+
+import android.content.Context;
+import android.content.Intent;
+import android.media.AudioManager;
+import android.provider.Settings;
+import android.os.UserHandle;
+import android.provider.Settings;
+import android.provider.Settings.Global;
+
+import com.android.systemui.R;
+import com.android.systemui.qs.QSTile;
+import com.android.systemui.qs.SecureSetting;
+import com.android.systemui.qs.GlobalSetting;
+import com.android.internal.logging.MetricsLogger;
+
+public class HifiTile extends QSTile<QSTile.BooleanState> {
+
+    private final SecureSetting mSetting;
+    private boolean mListening;
+
+    public HifiTile(Host host) {
+        super(host);
+        mSetting = new SecureSetting(mContext, mHandler, Settings.System.HIFI_ENABLE) {
+            @Override
+            protected void handleValueChanged(int value, boolean observedChange) {
+            if (value != 0 || observedChange)
+                handleRefreshState(value);
+            }
+        };
+    }
+
+   @Override
+    public int getMetricsCategory() {
+        return MetricsLogger.DONT_TRACK_ME_BRO;
+    }
+
+    @Override
+    protected void handleDestroy() {
+        super.handleDestroy();
+    }
+
+    @Override
+    protected void handleUserSwitch(int newUserId) {
+        mSetting.setUserId(newUserId);
+        handleRefreshState(mSetting.getValue());
+    }
+
+    @Override
+    protected void handleClick() {
+        AudioManager am = (AudioManager) mContext.getSystemService(Context.AUDIO_SERVICE);
+        toggleState();
+        if (HifiEnabled())
+            am.setParameters("hifi_state=on");
+        else
+            am.setParameters("hifi_state=off");
+        refreshState();
+    }
+
+    @Override
+    protected void handleLongClick() {
+        Intent intent = new Intent(Intent.ACTION_MAIN);
+        intent.setClassName("com.android.settings",
+            "com.android.settings.Settings$HifiSoundSettingsActivity");
+        mHost.startActivityDismissingKeyguard(intent);
+    }
+
+    @Override
+    protected void handleUpdateState(BooleanState state, Object arg) {
+        state.visible = true;
+        if(HifiEnabled())
+         state.label = mContext.getString(R.string.quick_settings_hifi_on);
+        else
+         state.label = mContext.getString(R.string.quick_settings_hifi_off);
+
+        state.icon = ResourceIcon.get(R.drawable.ic_qs_volume_panel); // TODO needs own icon
+    }
+
+    private boolean HifiEnabled() {
+        return Settings.System.getIntForUser(mContext.getContentResolver(),
+                Settings.System.HIFI_ENABLE, 0, UserHandle.USER_CURRENT) == 1;
+    }
+
+     protected void toggleState() {
+         Settings.System.putIntForUser(mContext.getContentResolver(),
+                        Settings.System.HIFI_ENABLE, !HifiEnabled() ? 1 : 0, UserHandle.USER_CURRENT);
+    }
+
+    @Override
+    protected BooleanState newTileState() {
+        return new BooleanState();
+    }
+
+    @Override
+    public void setListening(boolean listening) {
+        // Do nothing
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
index bd017e7..70131d2 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/QSTileHost.java
@@ -88,6 +88,7 @@ import com.android.systemui.qs.tiles.UsbTetherTile;
 import com.android.systemui.qs.tiles.VolumeTile;
 import com.android.systemui.qs.tiles.WifiTile;
 import com.android.systemui.qs.tiles.VisualizerTile;
+import com.android.systemui.qs.tiles.HifiTile;
 import com.android.systemui.statusbar.CustomTileData;
 import com.android.systemui.statusbar.policy.BatteryController;
 import com.android.systemui.statusbar.policy.BluetoothController;
@@ -377,6 +378,7 @@ public class QSTileHost implements QSTile.Host, Tunable {
 	else if (tileSpec.equals("pie")) return new PieTile(this);
 	else if (tileSpec.equals("float_mode")) return new FloatingWindowsTile(this);
 	else if (tileSpec.equals("visualizer")) return new VisualizerTile(this);
+	else if (tileSpec.equals("hifi")) return new HifiTile(this);
 	else if (tileSpec.startsWith(IntentTile.PREFIX)) return IntentTile.create(this,tileSpec);
 	else throw new IllegalArgumentException("Bad tile spec: " + tileSpec);
     }
diff --git a/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java b/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java
index 20c5cbf..baa529e 100644
--- a/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java
+++ b/packages/SystemUI/src/com/android/systemui/tuner/QsTuner.java
@@ -244,6 +244,7 @@ public class QsTuner extends Fragment implements Callback {
         else if (mSpec.equals("pie")) return R.string.quick_settings_pie;
         else if (mSpec.equals("float_mode")) return R.string.recent_float_mode_title;
         else if (mSpec.equals("visualizer")) return R.string.quick_settings_visualizer_label;
+        else if (mSpec.equals("hifi")) return R.string.quick_settings_hifi_label;
         return 0;
     }
 
diff --git a/services/core/java/com/android/server/power/PowerManagerService.java b/services/core/java/com/android/server/power/PowerManagerService.java
index db426b6..f2c0902 100644
--- a/services/core/java/com/android/server/power/PowerManagerService.java
+++ b/services/core/java/com/android/server/power/PowerManagerService.java
@@ -1140,6 +1140,7 @@ public final class PowerManagerService extends SystemService
     private void notifyWakeLockAcquiredLocked(WakeLock wakeLock) {
         if (mSystemReady) {
             if (!wakeLock.isBlocked()){
+                wakeLock.mNotifiedAcquired = true;
                 mNotifier.onWakeLockAcquired(wakeLock.mFlags, wakeLock.mTag, wakeLock.mPackageName,
                     wakeLock.mOwnerUid, wakeLock.mOwnerPid, wakeLock.mWorkSource,
                     wakeLock.mHistoryTag);
@@ -1158,6 +1159,7 @@ public final class PowerManagerService extends SystemService
 
     private void notifyWakeLockReleasedLocked(WakeLock wakeLock) {
         if (mSystemReady) {
+           wakeLock.mNotifiedAcquired = false; 
             if (!wakeLock.isBlocked()){
                 mNotifier.onWakeLockReleased(wakeLock.mFlags, wakeLock.mTag,
                     wakeLock.mPackageName, wakeLock.mOwnerUid, wakeLock.mOwnerPid,
-- 
1.9.3 (Apple Git-50)

